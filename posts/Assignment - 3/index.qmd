---
title: "Assignment 3: Anscombe Regression Models and  Plots"
author: "Bel Khuu"
date: "2022-09-25"
categories: [Code, R, Plots, Assignment]
image: "AnscombeReg.png"
draft: false
freeze: true
format:
  html:
    code-fold: true
    code-tools: true
execute:
  echo: false
---

## 1. Explore Anscombe (1973) Quartlet

In this example, the linear regression line is the same for all the models and yet, their scatter plot tells us that there is a better option to fit the data.

```{r}
#| echo: false
#| fig-cap: "Simple Model"

## Anscombe (1973) Quartlet

rm(list=ls())

data(anscombe)  # Load Anscombe's data

## Simple version
plot(anscombe$x1,anscombe$y1)
summary(anscombe)
```

For y1 \~ x1, the linear regression line seems to be a good fit for the model.

For y2 \~ x2, a quadratic regression line seems to be a better fit.

For y3 \~ x3 and y4 \~ x4, we might consider discarding the last data point as an outlier.

```{r}
#| echo: false
#| output: false
#| fig-cap: "Four Model Objects"
#| fig-subcap:
#|   - "y1 ~ x1"
#|   - "y2 ~ x2"
#|   - "y3 ~ x3"
#|   - "y4 ~ x4"
#| layout-ncol: 2
#| layout-nrow: 2
# Create four model objects
lm1 <- lm(y1 ~ x1, data=anscombe)
summary(lm1)
lm2 <- lm(y2 ~ x2, data=anscombe)
summary(lm2)
lm3 <- lm(y3 ~ x3, data=anscombe)
summary(lm3)
lm4 <- lm(y4 ~ x4, data=anscombe)
summary(lm4)
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
```

```{r}
#| echo: false
## Fancy version (per help file)

ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))

# Plot using for loop
for(i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  ## or   ff[[2]] <- as.name(paste0("y", i))
  ##      ff[[3]] <- as.name(paste0("x", i))
  mods[[i]] <- lmi <- lm(ff, data = anscombe)
  print(anova(lmi))
}

sapply(mods, coef)  # Note the use of this function
lapply(mods, function(fm) coef(summary(fm)))

# Preparing for the plots
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))

# Plot charts using for loop
for(i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
       xlim = c(3, 19), ylim = c(3, 13))
  abline(mods[[i]], col = "blue")
}
mtext("Anscombe's 4 Regression data sets", outer = TRUE, cex = 1.5)
par(op)

```

## 2. Fine tune the charts with RGraphics by Murrell

```{r}
#| echo: false
#| fig-cap: "x1 ~ y1 Chart fine-tuned with RGraphics by Murrell"

par(las=1, mar=c(5, 5, 2, 2), cex=.7) 
plot.new()
plot.window(range(anscombe$x1), c(0, 6))

plot(anscombe$x1,anscombe$y1, ylab = "", xlab = "")
points(anscombe$x1,anscombe$y1, pch=16, cex=2)
abline(coefficients(lm1))

mtext("x1", side=1, line=3, cex=0.8)
mtext("y1", side=2, line=3, las=0, cex=0.8)

```

## 3. Fine tune the charts with ggplot

```{r}
#| echo: false
#| fig-cap: "x1 ~ y1 Chart fine-tuned with ggplot2"

library(ggplot2)

ggplot(anscombe, aes(x1, y1)) + 
  geom_point()+
  geom_line()

```
