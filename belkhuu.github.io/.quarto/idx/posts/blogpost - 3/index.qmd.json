{"title":"Blog Post 3: Assignment 5","markdown":{"yaml":{"title":"Blog Post 3: Assignment 5","subtitle":"Different kinds of combine, grep and 4 verb for the pipe operator","author":"Bel Khuu","date":"2022-10-24","categories":["Code","R","Plots","Blog","Hackathon"],"image":"plot.jpg","draft":false,"format":{"html":{"code-fold":true,"code-tools":true,"code-copy":true}},"execute":{"echo":false}},"headingText":"1. Different kinds of combine","containsRefs":false,"markdown":"\n\nOur team has decided to get a head start for the next week's assignment. [UTD Grades](utdgrades.com) is a great website to find grades distribution for the classes offered at UTD during previous semesters. All of their raw data is posted on their github account!\n\nLet's start with what I have learned or re-learned for the data cleaning process.\n\n\n### a. rbind: Combine using same columns\n\n```{r}\n#| warning: false\n#| fig-cap: \"\"\n\nlibrary(tidyverse)\nspgrades <- data.frame(read.csv(\"Spring2022grades.csv\"))\nfagrades <- data.frame(read.csv(\"Fall2021grades.csv\"))\n\ngrades <- rbind(fagrades, spgrades) \n```\n\n``` yaml\nspgrades <- data.frame(read.csv(\"Spring2022grades.csv\"))\nfagrades <- data.frame(read.csv(\"Fall2021grades.csv\"))\n\ngrades <- rbind(fagrades, spgrades)\n```\n\n### b. paste: Combine values in two columns (concatenating)\n\nHere, I wanted just one Course column that has the subject and the catalog number.\n\n```{r}\ngrades$Course <- paste(grades$Subject, grades$Catalog.Number)\n\nhead(grades[1:2])\nhead(grades[28])\n```\n\n``` yaml\ngrades$Course <- paste(grades$Subject, grades$Catalog.Number)\n```\n\n### c. merge: Combine using same rows\n\nHere, I tried to create percentage for all the grades. So, I created a copy of the grades dataframe that only contains grades. I copied over the Course column for the course names, then used merge to combine both dataframes.\n\n```{r}\npct <- grades[4:21]/rowSums(grades[4:21], na.rm=TRUE) * ifelse(rowSums(is.na(grades[4:21])) == ncol(grades[4:21]), NA, 1)\npct$Course <- grades$Course\ngrades <- merge(grades,pct, by=\"Course\")\n\nhead(grades[4:9])\nhead(pct[1:5])\n```\n\n``` yaml\npct <- grades[4:21]/rowSums(grades[4:21], na.rm=TRUE)*ifelse(rowSums(\nis.na(grades[4:21])) == ncol(grades[4:21]), NA, 1)\npct$Course <- grades$Course\ngrades <- merge(grades,pct, by=\"Course\")\n\nhead(grades[4:9])\nhead(pct[1:5])\n```\n\n## 2. Revisiting Grep\n\nGrep is great when you are working with a large dataset and want to pull just the variables or column names that contains a certain string. In my case, I want to remove all the instructor columns. Could I have just selected the column numbers and remove them from my dataframe since they are right next to each other, yes!\n\nLet's just say that knowing/remembering how to do this will benefit me in long run. I learned this in Professor Dong Li's Select Topics in Economics.\n\n```{r}\ninstructor <- grep(\"Instructor\", colnames(grades), value = TRUE)\n\ninstructor\n```\n\n``` yaml\ninstructor <- grep(\"Instructor\", colnames(grades), value = TRUE)\n```\n\nHere is another example with grep. I wanted to find all the course that has EPPS in its name. All of those courses will eppsclass. EPPS will be the new dataframe created from the grades dataframe with only EPPS courses (using eppsclass present in Course).\n\n```{r}\neppsclass <- grep(\"EPPS\", grades$Course, value = TRUE)\nEPPS <- grades%>%\n  subset(Course %in% eppsclass)\nhead(EPPS[1:5])\n```\n\n``` yaml\neppsclass <- grep(\"EPPS\", grades$Course, value = TRUE)\nEPPS <- grades%>%\n  subset(Course %in% eppsclass)\nhead(EPPS[1:5])\n```\n\n## 3. Revisiting the 4 verbs in pipe operator\n\nI have created a cheat sheet for R while working on my projects. Professor Li often refer to these as the 4 verbs when using the pipe operator %\\>%. I don't know when but I have added a fifth one to my list.\n\n-   Filter: pick rows you want to keep\n\n-   Select: pick columns you want to keep\n\n-   Mutate: create new variable with new conditions\n\n-   Summarize: summarize with new variables\n\n-   Arrange: to sort in order\n\nBelow is what the 4 verbs part of my cheat sheet script looks like.\n\n``` yaml\n#4 VERBS\n\n######### \n\n# Filter function works on rows.\n# Select function will pick the column to keep.\n# Mutate can create new variables\n# Summary to summarize\n# Arrange to sort in order\n\n##filter\ntxhousing <- txhousing%>%\n  filter(city=='Dallas'|city=='Houston'|city=='Austin', month==1)\n\nlabor_high <- filter(labor, payment>750, gender==\"F\")\n\n##select\nlabor_select <- select(labor, hours, gender)\nlabor_select2 <- labor %>%\n  select(hours, gender)\n\n## mutate \nlabor_mutate2 <- labor %>%\n  mutate(wage = payment/hours)\n\n##summarize\nlabor_summary <- summarize(group_by(labor, gender), \n                           avg_hours = mean(hours),\n                           paymentsum = sum(payment), \n                           medianage = median(age))\n\n##arrange\n#MUST SPECIFY GROUP_BY with by_group=TRUE\n#DEFAULT ascending order\n\nby_cyl <- mtcars %>% \n  group_by(cyl)\nby_cyl %>% \n  arrange(desc(wt), .by_group = TRUE)\n#########\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","editor":"visual","theme":"spacelab","title-block-banner":true,"title":"Blog Post 3: Assignment 5","subtitle":"Different kinds of combine, grep and 4 verb for the pipe operator","author":"Bel Khuu","date":"2022-10-24","categories":["Code","R","Plots","Blog","Hackathon"],"image":"plot.jpg","draft":false,"code-copy":true},"extensions":{"book":{"multiFile":true}}}}}