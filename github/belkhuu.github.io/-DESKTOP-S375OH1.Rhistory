corona%>%
filter(date>'2022-01-01')
rm(list=ls())
rm(list=ls())
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
coronavirus$type <- factor(coronavirus$type)
coronavirus$continent_name <- factor(coronavirus$continent_name)
coronavirus$continent_code <- factor(coronavirus$continent_code)
cov <- coronavirus %>%
group_by(country) %>%
filter(date=="2022-01-01")%>%
summarise(total = sum(cases)) %>%
arrange(-total)
summary(cov)
total <- merge(x=coronavirus,y=cov,all.x=TRUE,by=c("country"))%>%
select(type, continent_name,cases, total, country, date)%>%
filter(date=="2022-01-01")
### Animate
library(dplyr)
coronavirus%>%
filter(date>'2022-01-01')
library(xts)
corona <- xts(coronavirus[, -1], order.by=as.Date(coronavirus[,1], "%Y-%m-%d"))
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
library(gganimate)
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
rm(list=ls())
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
coronavirus$type <- factor(coronavirus$type)
coronavirus$continent_name <- factor(coronavirus$continent_name)
coronavirus$continent_code <- factor(coronavirus$continent_code)
cov <- coronavirus %>%
group_by(country) %>%
filter(date=="2022-01-01")%>%
summarise(total = sum(cases)) %>%
arrange(-total)
summary(cov)
total <- merge(x=coronavirus,y=cov,all.x=TRUE,by=c("country"))%>%
select(type, continent_name,cases, total, country, date)%>%
filter(date=="2022-01-01")
### Animate
coronavirus%>%
filter(date>'2022-01-01')
library(xts)
corona <- xts(coronavirus[, -1], order.by=as.Date(coronavirus[,1], "%Y-%m-%d"))
library(gganimate)
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
library(gganimate)
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
rm(list=ls())
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
coronavirus%>%
filter(date>'2022-01-01')
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colours) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
library(ggplot2)
library(gganimate)
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
animate(plot1)
anim_save('plot1.gif')
plot1 <- ggplot(corona, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
coronavirus%>%
filter(date>'2022-01-01')
library(ggplot2)
library(gganimate)
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = continent_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
animate(plot1)
View(coronavirus)
coronavirus%>%
filter(date>'2022-01-01')
library(ggplot2)
library(gganimate)
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
animate(plot1)
anim_save('plot1.gif')
total <- merge(x=coronavirus,y=cov,all.x=TRUE,by=c("country"))%>%
select(type, continent_name,cases, total, country, date)%>%
filter(date=="2022-01-01")
coronavirus$type <- factor(coronavirus$type)
coronavirus$continent_name <- factor(coronavirus$continent_name)
coronavirus$continent_code <- factor(coronavirus$continent_code)
cov <- coronavirus %>%
group_by(country) %>%
filter(date=="2022-01-01")%>%
summarise(total = sum(cases)) %>%
arrange(-total)
summary(cov)
total <- merge(x=coronavirus,y=cov,all.x=TRUE,by=c("country"))%>%
select(type, continent_name,cases, total, country, date)%>%
filter(date=="2022-01-01")
### Animate
coronavirus%>%
filter(date>'2022-01-01')
library(ggplot2)
library(gganimate)
total <- merge(x=coronavirus,y=cov,all.x=TRUE,by=c("country"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
View(total)
cov <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))%>%
summarise(total.pop = sum(population))
summarise(coronavirus$total.case = sum(cases))
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
cov.pop<- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(population))
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
cov.pop<- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(population))
total <- merge(x=coronavirus,y=cov.cases+cov.pop,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
cov.pop<- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(population))
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
rm(list=ls())
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
cov.pop<- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(population))
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
select(type, continent_name,cases, total, country, date, population)%>%
filter(date=="2022-01-01")
total1 <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
filter(date=="2022-01-01")
total <- merge(total1, y=cov.pop,by=c("continent_name"))
View(total)
View(cov.pop)
View(cov.cases)
View(cov.pop)
cov.pop<- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(population),na.rm = TRUE)
View(cov.pop)
View(cov.cases)
View(cov.pop)
rm(list=ls())
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
library(gganimate)
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
total <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))%>%
filter(date=="2022-01-01")
View(cov.cases)
View(coronavirus)
count <- coronavirus %>%
group_by(country) %>%
count(continent_name)
View(count)
count <- coronavirus %>%
group_by(continent_name) %>%
count(country)
View(count)
count <- coronavirus %>%
group_by(continent_name) %>%
group_by(country)%>%
count(country)
View(count)
count <- coronavirus %>%
group_by(country) %>%
group_by(continent_name)%>%
count(continent_name)
View(count)
count <- coronavirus %>%
filter(date=="2022-01-01")%>%
group_by(country) %>%
group_by(continent_name)%>%
count(continent_name)
View(count)
View(count)
View(cov.cases)
merge <- merge(x=coronavirus,y=cov.cases,all.x=TRUE,by=c("continent_name"))
View(merge)
merge <- merge(x=count,y=cov.cases,all.x=TRUE,by=c("continent_name"))
View(merge)
library(coronavirus)
data("coronavirus")
library(tidyverse)
library(ggplot2)
cov.cases <- coronavirus %>%
group_by(continent_name) %>%
filter(date=="2022-01-01")%>%
summarise(total.case = sum(cases))
count <- coronavirus %>%
filter(date=="2022-01-01")%>%
group_by(country) %>%
group_by(continent_name)%>%
count(continent_name)
merge <- merge(x=count,y=cov.cases,all.x=TRUE,by=c("continent_name"))
# Variable Width Column Chart
df<-data.frame(Continent=merge$continent_name,Total= merge$total.case,width=merge$n)
df$w <- cumsum(df$width) #cumulative sums
df$wm <- df$w - df$width
df$n<- with(df, wm + (w - wm)/2)
vwcc  <- ggplot(df, aes(ymin = 0))+
geom_rect(aes(xmin = wm, xmax = w, ymax = Total, fill = Continent))+
geom_text(aes(x = n, y = Total, label = Continent),size=4,angle = 45)+
labs(title = "COVID 19 Cases by Continent", x = "Number of Countries", y = "Total Number of Cases")
vwcc
coronavirus%>%
filter(date>'2022-01-01')
library(ggplot2)
library(gganimate)
plot1 <- ggplot(coronavirus, aes(cases, long, size = population, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
# scale_colour_manual(values=country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent_name) +
# Here comes the gganimate specific bits
labs(title = 'date: {frame_time}', x = 'Cases', y = 'Longitude') +
transition_time(date) +
ease_aes('linear')
animate(plot1)
anim_save('plot1.gif')
# Load
library(coronavirus)
data("coronavirus")
force(coronavirus)
library(readr)
write_csv(coronavirus, "data.csv")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/EPPS7370 Time Series Analysis/Problem sets/PS3")
write_csv(coronavirus, "data.csv")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/projects/Proposal")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/
Fall 2022/Data Visualization/Quarto/belkhuu.github.io/projects/Proposal")
climate <- read.csv("climate.csv")
# clear memory
rm(list=ls())
climate <- read.csv("climate.csv")
conflict <- read.csv("conflict.csv")
cli.pak <- climate%>%
filter(Country=="Pakistan")%>%
select(Country, Indicator, [8:48])
cli.pak <- climate%>%
filter(Country=="Pakistan")%>%
select(-2, -3, -5, -6, -7)
library(tidyverse)
cli.pak <- climate%>%
filter(Country=="Pakistan")%>%
select(-2, -3, -5, -6, -7)
library(grep)
install.packages("grep")
library(grep)
install.packages("grep")
library(grep)
cli.pak$Indicator[grepl("Drought",cli.pak$Indicator)]<-"Drought"
cli.pak$Indicator[grepl("Drought",cli.pak$Indicator)]<-"Drought"
cli.pak$Indicator[grepl("Extreme temperature",cli.pak$Indicator)]<-"Extreme temperature"
cli.pak$Indicator[grepl("Flood",cli.pak$Indicator)]<-"Flood"
cli.pak$Indicator[grepl("Landslide",cli.pak$Indicator)]<-"Landslide"
cli.pak$Indicator[grepl("Storm",cli.pak$Indicator)]<-"Storm"
cli.pak$Indicator[grepl("TOTAL",cli.pak$Indicator)]<-"TOTAL"
read.csv("Spring2022grades.csv")
setwd("C:/Users/vuk170000/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 5 (Hackathon 2)")
read.csv("Spring2022grades.csv")
grades <- read.csv("Spring2022grades.csv")
library(tidyverse)
kh_grades <- grades%>%
filter(Instructor.1=="Karl Ho")
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")
View(kh_grades)
View(kh_grades)
?barplot
kh_grades
# Hack2
#Manually set directory
spgrades <- read.csv("Spring2022grades.csv")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 5 (Hackathon 2)")
merge(fagrades, spgrades)
fagrades <- read.csv("Fall2021grades.csv")
spgrades <- read.csv("Spring2022grades.csv")
fagrades <- read.csv("Fall2021grades.csv")
merge(fagrades, spgrades)
grades <- merge(fagrades, spgrades)
library(tidyverse)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")
kh_grades
View(grades)
grades <- merge(fagrades, spgrades)
grades <- data.frame(merge(fagrades, spgrades))
spgrades <- data.frame(read.csv("Spring2022grades.csv"))
fagrades <- data.frame(read.csv("Fall2021grades.csv"))
grades <- merge(fagrades, spgrades)
grades <- rbind(fagrades, spgrades)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")
kh_grades
View(kh_grades)
View(kh_grades)
instructor <- grep("Instructor", grades, value = TRUE)
library(WDI)
instructor <- WDIsearch(string = "Instructor", short = TRUE, cache = NULL)
View(instructor)
instructor <- c(WDIsearch(string = "Instructor", short = TRUE, cache = NULL))
instructor <- c(WDIsearch(string = "Instructor", short = TRUE, cache = NULL))
instructor <- grep(c("Instructor"), grades, value = TRUE)
instructor <- c(grep("Instructor", grades, value = TRUE))
instructor <- c(grep(indicator="Instructor", grades, value = TRUE))
instructor <- c(grep("Instructor", colnames(grades), value = TRUE))
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")%>%
select(-instructor)
instructor <- grep("Instructor", colnames(grades), value = TRUE)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")%>%
select(-instructor)
View(kh_grades)
View(kh_grades)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")%>%
select(-instructor,-Section)
kh_grades$Course <- paste(kh_grades$Subject, kh_grades$Catalog.Number)
View(kh_grades)
View(kh_grades)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")%>%
select(-instructor,-Section, -Subject, -Catalog.Number)
View(kh_grades)
View(kh_grades)
